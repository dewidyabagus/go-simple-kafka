// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Events is an autogenerated mock type for the Events type
type Events struct {
	mock.Mock
}

// SendEventAsync provides a mock function with given fields: topic, key, value
func (_m *Events) SendEventAsync(topic string, key []byte, value []byte) error {
	ret := _m.Called(topic, key, value)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, []byte, []byte) error); ok {
		r0 = rf(topic, key, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewEvents interface {
	mock.TestingT
	Cleanup(func())
}

// NewEvents creates a new instance of Events. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewEvents(t mockConstructorTestingTNewEvents) *Events {
	mock := &Events{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
